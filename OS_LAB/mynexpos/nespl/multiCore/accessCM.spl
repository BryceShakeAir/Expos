alias functionNum R1;

//acquire_kern_lock
if(functionNum==1) then

//1.Checking if secondary core
if( CORE==SECONDARY_CORE ) then

	//2.Check if paging status or logout status is set
	if([SYSTEM_STATUS_TABLE + 5]==1 || [SYSTEM_STATUS_TABLE + 7]==1) then
	

		//3.set state to ready
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 6]*16 + 4 ] = "READY";
		//4.call context switch
		
		multipush(R1);
		call CONTEXT_SWITCH;
		multipop(R1);
	endif;

endif;

//5.spin-lock

while( tsl( KERN_LOCK )==1 ) do

	continue;

endwhile;

//print "Locked";
//print [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+CORE*5+1]*16 + 9 ];

endif;


//acquire_schedule_lock
if(functionNum==2) then

	while( tsl( SCHED_LOCK )==1 ) do

		continue;

	endwhile;

endif;


//releaseLock
if(functionNum==4) then

	alias LockVarAddress R2;
	[LockVarAddress] = 0;
	//print "Unlocked";
	//print [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+CORE*5+1]*16 + 9 ];

endif;

return;
