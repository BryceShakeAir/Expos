//Load lib

loadi(63,13);
loadi(64,14);

//Load stack

//Load heap

//load init code
loadi(65,7);
loadi(66,8);
//idle
loadi(69,11);
loadi(70,12);

//loading exceptions
loadi(22,35);
loadi(23,36);
loadi(2,15);
loadi(3,16);
//loading timer
loadi(4, 17);
loadi(5, 18);
//loading int7
loadi(16,29);
loadi(17,30);

//PTBR PTLR

PTBR = PAGE_TABLE_BASE +20;
PTLR = 10;

//Setting up Page Table

[PTBR+0] = 63;
[PTBR+1] = "0100";

[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

[PTBR+8] = 65;
[PTBR+9] = "0110";
[PTBR+10] = 66;
[PTBR+11] = "0110";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


//PTBR PTLR

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//Setting up Page Table

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 69;
[PTBR+9] = "0110";
[PTBR+10] = 70;
[PTBR+11] = "0110";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";
//USER AREA PAGE

//MAKING PROCESS TABLE
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = READY;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE+16;
[PROCESS_TABLE + 16 + 15] = 10;

[PROCESS_TABLE + 11] = 82;
[PROCESS_TABLE + 1] = 0;
[PROCESS_TABLE + 4] = CREATED;
[PROCESS_TABLE + 12] = 0;
[PROCESS_TABLE + 13] = 8*512;
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;

//SHOULD PTBR ALSO BE CHANGED
[SYSTEM_STATUS_TABLE + 1] = 1;
PTBR = PAGE_TABLE_BASE+20;


//TOP OF USERSP HAS ENTRY POINT
[76*512] = [65*512+1];
[81 * 512] = [69*512 + 1];

//CHANGE SP
SP = 8*512;
//Ireturn
ireturn;
