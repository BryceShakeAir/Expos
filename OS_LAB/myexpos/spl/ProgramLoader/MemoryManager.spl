//breakpoint;
alias functionNum R1;

//GET FREE PAGE
if(functionNum==1) then

	//Increse wait_mem_count
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] +1;
	
	alias currProcessTable R2;
	currProcessTable = PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16;
	
	//Checking if there are free pages for allocation
	while( [SYSTEM_STATUS_TABLE + 2]==0  ) do
		
		[currProcessTable + 4] = "WAIT_MEM";
		
		multipush(R1,R2);
		call CONTEXT_SWITCH;
		multipop(R1,R2);	
	endwhile;	 
	
	//Decrement mem_free_count and wait_mem_count;
	[SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]-1;
	[SYSTEM_STATUS_TABLE+3] = [SYSTEM_STATUS_TABLE+3]-1;
	
	//Search MFL for free Page
	alias freePage R3;
	freePage =76;
	while(freePage<128) do
	
		if([MEMORY_FREE_LIST + freePage]==0) then
			[MEMORY_FREE_LIST + freePage]=1;
			break;
		endif;		
		freePage = freePage + 1;			

	endwhile;		
	
	R0 = freePage;
endif;

//RELEASE PAGE
if(functionNum==2) then

	alias pageNum R2;
	
	//MFL[UAPN]--;
	
	[MEMORY_FREE_LIST + pageNum ] = [MEMORY_FREE_LIST + pageNum ] - 1;
	
	if([MEMORY_FREE_LIST+ pageNum]==0) then
	
		//Increasing MFC
		[SYSTEM_STATUS_TABLE+2] = [SYSTEM_STATUS_TABLE+2]+1;
	endif;
	
	//Updating status to ready
	alias i R3;
	i = 0;
	
	while(i<16) do
	
		if( [PROCESS_TABLE + i*16 +4]=="WAIT_MEM" ) then
			
			[PROCESS_TABLE + i*16 +4]="READY";	
		
		endif;
		i = i+1;
	endwhile;
	

endif;

return;
